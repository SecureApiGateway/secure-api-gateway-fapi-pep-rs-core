{
  "properties": {
    "security": {
    },
    "urls": {
      "idmBaseUri": "https://&{identity.platform.fqdn}/openidm"
    },
    "vertxConfig": {
      "maxHeaderSize": 16384,
      "initialSettings": {
        "maxHeaderListSize": 16384
      }
    }
  },
  "handler": {
    "type": "DispatchHandler",
    "config": {
      "bindings": [
        {
          "condition": "${request.uri.host == env['MY_POD_IP']}",
          "handler": {
            "name": "router-pod",
            "type": "Router",
            "config": {
              "scanInterval": "disabled",
              "directory": "${openig.configDirectory}/routes/routes-pod"
            }
          }
        },
        {
          "condition": "${request.uri.host != env['MY_POD_IP']}",
          "handler": {
            "name": "router-service",
            "type": "Router",
            "config": {
              "scanInterval": "disabled",
              "directory": "${openig.configDirectory}/routes/routes-service"
            }
          }
        }
      ]
    }
  },
  "heap": [
    {
      "name": "capture",
      "type": "CaptureDecorator",
      "config": {
        "captureEntity": true
      }
    },
    {
      "name": "ReverseProxyHandler",
      "type": "ReverseProxyHandler",
      "capture": [
        "request",
        "response"
      ],
      "config": {
        "vertx": "${vertxConfig}"
      }
    },
    {
      "name": "ReverseProxyHandlerNoCapture",
      "type": "ReverseProxyHandler",
      "comment": "ReverseProxyHandler with no capture decorator configuration",
      "config": {
        "vertx": "${vertxConfig}"
      }
    },
    {
      "name": "JwtSession",
      "type": "JwtSession"
    },
    {
      "name" : "ForgeRockClientHandler",
      "type" : "Chain",
      "config" : {
        "filters" : [ 
          "TransactionIdOutboundFilter"
       ],
        "handler" : "ClientHandler"
      },
      "capture" : [ "response", "request" ]
    },
    {
      "name": "SystemAndEnvSecretStore-IAM",
      "type": "SystemAndEnvSecretStore",
      "config": {
        "format": "PLAIN"
      }
    },
    {
      "name": "IDMClientHandler",
      "type": "Chain",
      "config": {
        "filters": [
          {
            "type": "ResourceOwnerOAuth2ClientFilter",
            "config": {
              "tokenEndpoint": "https://&{identity.platform.fqdn}/am/oauth2/realms/root/realms/&{am.realm}/access_token",
              "username": "&{ig.idm.user}",
              "passwordSecretId": "ig.idm.password",
              "secretsProvider": "SystemAndEnvSecretStore-IAM",
              "scopes": [
                "fr:idm:*"
              ],
              "endpointHandler": {
                "type": "Chain",
                "config": {
                  "handler": "ForgeRockClientHandler",
                  "filters": [
                    {
                      "type": "ClientSecretBasicAuthenticationFilter",
                      "config": {
                        "clientId": "&{ig.client.id}",
                        "clientSecretId": "ig.client.secret",
                        "secretsProvider": "SystemAndEnvSecretStore-IAM"
                      }
                    }
                  ]
                }
              }
            }
          }
        ],
        "handler": "ForgeRockClientHandler"
      }
    },
    {
      "name": "TrustManager-OB",
      "type": "TrustManager",
      "config": {
        "keystore": {
          "type": "KeyStore",
          "config": {
            "url": "file://&{ig.instance.dir}&{ig.truststore.path}",
            "type": "PKCS12",
            "passwordSecretId": "ig.truststore.password",
            "secretsProvider": "SystemAndEnvSecretStore-IAM"
          }
        }
      }
    },
    {
      "name": "OBClientHandler",
      "type": "ClientHandler",
      "capture": "all",
      "config": {
        "tls": {
          "type": "ClientTlsOptions",
          "config": {
            "trustManager": "TrustManager-OB"
          }
        }
      }
    },
    {
      "name": "JwkSetService",
      "type": "CachingJwkSetService",
      "config": {
        "endpointHandler": "OBClientHandler",
        "cacheMaxSize": 500,
        "cacheTimeout": "24 hours"
      }
    },
    {
      "name": "ValidateApiClientMtlsCertChain",
      "type": "ChainOfFilters",
      "comment": "This filter chain validates the ApiClient's MTLS cert using the Trusted Directory, it first fetches all of the resources it needs to perform the validation",
      "config" : {
        "filters": [
          {
            "comment": "FAPI Resource Filter Chain",
            "name": "fapiResourceFilterChain",
            "type": "FapiResourceFilterChain",
            "config": {
              "clientCertificate": "${pemCertificate(urlDecode(request.headers['ssl-client-cert'][0]))}"
            }
          },
          {
            "comment": "Add ApiClient data to the FAPI context",
            "name": "FetchApiClientFilter",
            "type": "FetchApiClientFilter",
            "config": {
              "apiClientService": "IdmApiClientService"
            }
          }
        ]
      }
    },
    {
      "name": "SecretsProvider-AmJWK",
      "type": "SecretsProvider",
      "config": {
        "stores": [
          {
            "type": "JwkSetSecretStore",
            "config": {
              "jwkUrl": "https://&{identity.platform.fqdn}/am/oauth2/realms/root/realms/&{am.realm}/connect/jwk_uri"
            }
          }
        ]
      }
    },
    {
      "name": "IdmService",
      "type": "IdmService",
      "config": {
        "baseEndpoint": "&{urls.idmBaseUri}",
        "endpointHandler": "IDMClientHandler"
      }
    },
    {
      "name": "IdmApiClientService",
      "type": "IdmApiClientService",
      "config": {
        "idmService": "IdmService",
        "jwkSetService": "JwkSetService"
      }
    }
  ],
  "monitor": true
}
